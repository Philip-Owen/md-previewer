{"version":3,"sources":["Header.js","Editor.js","Preview.js","RawView.js","MarkdownEditor.js","App.js","index.js"],"names":["HeaderContainer","styled","div","Button","h3","Header","toggleEditor","toggleRaw","setToggleEditor","setToggleRaw","onClick","EditorContainer","EditorArea","textarea","Editor","text","setText","value","onChange","event","target","PreviewContainer","Preview","className","source","RawContainer","RawView","Container","props","MarkdownEditor","useState","App","ReactDOM","render","document","getElementById"],"mappings":"ggBAqBA,IAAMA,EAAkBC,IAAOC,IAAV,KASfC,EAASF,IAAOG,GAAV,KAQGC,EAnCf,YAA6E,IAA3DC,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,aAC1D,OACE,kBAACT,EAAD,KACE,+CACA,6BACE,kBAACG,EAAD,CAAQO,QAAS,kBAAMF,GAAiBF,KACpCA,EAA+B,cAAhB,gBAGrB,6BACE,kBAACH,EAAD,CAAQO,QAAS,kBAAMD,GAAcF,KACjCA,EAA8B,gBAAlB,oB,qWCAxB,IAAMI,EAAkBV,IAAOC,IAAV,KAMfU,EAAaX,IAAOY,SAAV,KAUDC,EA3Bf,YAAoC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACtB,OACE,kBAACL,EAAD,KACE,kBAACC,EAAD,CACEK,MAAOF,EACPG,SAAU,SAAAC,GAAK,OAAIH,EAAQG,EAAMC,OAAOH,Y,6bCIhD,IAAMI,EAAmBpB,IAAOC,IAAV,KAuBPoB,EA/Bf,YAA4B,IAATP,EAAQ,EAARA,KACjB,OACE,kBAACM,EAAD,KACE,kBAAC,IAAD,CAAeE,UAAU,WAAWC,OAAQT,M,oTCMlD,IAAMU,EAAexB,IAAOC,IAAV,KAeHwB,EAzBf,YAA4B,IAATX,EAAQ,EAARA,KACjB,OACE,kBAACU,EAAD,KACE,yBAAKF,UAAU,OACb,6BAAMR,M,gGCad,IAAMY,EAAY1B,IAAOC,IAAV,KAEX,SAAA0B,GAAK,OAAKA,EAAMtB,aAAe,0BAA4B,QAGhDuB,EAjBf,YAAsD,IAA5BvB,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,UAAa,EAC3BuB,mBAAS,gCADkB,mBAC5Cf,EAD4C,KACtCC,EADsC,KAEnD,OACE,6BACE,kBAACW,EAAD,CAAWrB,aAAcA,GACrBA,EAA0D,KAA3C,kBAAC,EAAD,CAAQS,KAAMA,EAAMC,QAASA,IAC5CT,EAAsC,kBAAC,EAAD,CAASQ,KAAMA,IAAzC,kBAAC,EAAD,CAASA,KAAMA,OCQtBgB,MAjBf,WAAgB,IAAD,EAC2BD,oBAAS,GADpC,mBACNxB,EADM,KACQE,EADR,OAEqBsB,oBAAS,GAF9B,mBAENvB,EAFM,KAEKE,EAFL,KAIb,OACE,yBAAKc,UAAU,OACb,kBAAC,EAAD,CACEjB,aAAcA,EACdE,gBAAiBA,EACjBD,UAAWA,EACXE,aAAcA,IAEhB,kBAAC,EAAD,CAAeH,aAAcA,EAAcC,UAAWA,MCZ5DyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.88764ad9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Header({ toggleEditor, toggleRaw, setToggleEditor, setToggleRaw }) {\r\n  return (\r\n    <HeaderContainer>\r\n      <h1>Markdown Editor</h1>\r\n      <div>\r\n        <Button onClick={() => setToggleEditor(!toggleEditor)}>\r\n          {!toggleEditor ? \"Hide Editor\" : \"Show Editor\"}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <Button onClick={() => setToggleRaw(!toggleRaw)}>\r\n          {!toggleRaw ? \"View Raw Text\" : \"View Markdown\"}\r\n        </Button>\r\n      </div>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  padding: 0 10px;\r\n  align-items: center;\r\n  * {\r\n    padding-left: 10px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.h3`\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n  :hover {\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Editor({ text, setText }) {\r\n  return (\r\n    <EditorContainer>\r\n      <EditorArea\r\n        value={text}\r\n        onChange={event => setText(event.target.value)}\r\n      />\r\n    </EditorContainer>\r\n  );\r\n}\r\n\r\nconst EditorContainer = styled.div`\r\n  min-width: 30%;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst EditorArea = styled.textarea`\r\n  font-size: 18px;\r\n  resize: none;\r\n  height: 80vh;\r\n  width: 100%;\r\n  outline: none;\r\n  border: 2px solid black;\r\n  padding: 0 10px;\r\n`;\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Preview({ text }) {\r\n  return (\r\n    <PreviewContainer>\r\n      <ReactMarkdown className=\"markdown\" source={text} />\r\n    </PreviewContainer>\r\n  );\r\n}\r\n\r\nconst PreviewContainer = styled.div`\r\n  min-width: 70%;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  .markdown {\r\n    outline: 2px solid black;\r\n    height: 80vh;\r\n    width: 100%;\r\n    padding: 0 10px;\r\n    white-space: pre-wrap;\r\n    overflow-y: scroll;\r\n  }\r\n  pre,\r\n  code {\r\n    background-color: lightgray;\r\n  }\r\n  pre {\r\n    padding: 5px;\r\n    width: fit-content;\r\n  }\r\n`;\r\n\r\nexport default Preview;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction RawView({ text }) {\r\n  return (\r\n    <RawContainer>\r\n      <div className=\"raw\">\r\n        <pre>{text}</pre>\r\n      </div>\r\n    </RawContainer>\r\n  );\r\n}\r\n\r\nconst RawContainer = styled.div`\r\n  min-width: 70%;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  .raw {\r\n    outline: 2px solid black;\r\n    height: 80vh;\r\n    width: 100%;\r\n    padding: 0 10px;\r\n    white-space: pre-wrap;\r\n    overflow-y: scroll;\r\n  }\r\n`;\r\n\r\nexport default RawView;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Editor from \"./Editor\";\r\nimport Preview from \"./Preview\";\r\nimport RawView from \"./RawView\";\r\n\r\nfunction MarkdownEditor({ toggleEditor, toggleRaw }) {\r\n  const [text, setText] = useState(\"# Type your Markdown here...\");\r\n  return (\r\n    <div>\r\n      <Container toggleEditor={toggleEditor}>\r\n        {!toggleEditor ? <Editor text={text} setText={setText} /> : null}\r\n        {!toggleRaw ? <Preview text={text} /> : <RawView text={text} />}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  ${props => (props.toggleEditor ? \"justify-content: center\" : null)}\r\n`;\r\n\r\nexport default MarkdownEditor;\r\n","import React, { useState } from \"react\";\n\nimport Header from \"./Header\";\nimport PreviewEditor from \"./MarkdownEditor\";\n\nfunction App() {\n  const [toggleEditor, setToggleEditor] = useState(false);\n  const [toggleRaw, setToggleRaw] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Header\n        toggleEditor={toggleEditor}\n        setToggleEditor={setToggleEditor}\n        toggleRaw={toggleRaw}\n        setToggleRaw={setToggleRaw}\n      />\n      <PreviewEditor toggleEditor={toggleEditor} toggleRaw={toggleRaw} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}